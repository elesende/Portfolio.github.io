#
#   Eric Lesende
#
#   guessNumber.py
#
#   Prompt user to guess a number generated by an rng between 1-100
#   User has 7 rounds per game to guess the number, user can play as
#   as many games as they wish
#       -If guess is > number display "Too high"
#       -If guess is < number display "Too low"
#       -If guess is == to number congratulate player
#
#   Input: Prompt user to input a number between 1-100
#
#   Processing: 1. Generate random number
#               2. Prompt user "Enter your guess (1-100): "
#                   1. Validate guess is not < 1 and > 100
#                   2. Compare guess with random number
#                   3. If guess is > random number display "Too high"
#                   4. If guess is < random number display "Too low"
#                   5. If guess is correct, display "Congratulations ... 
#                      You guessed the mystery number!"
#                   6. Ask user if they would like to try again (y/n)?
#   Ouput: Display either Too high, Too low, congratulations or try again?     
#
#

#   Import library

import random

#   Set the global constant of MAX as the value 7 for 7 rounds

MAX=7
number = random.randint(1, 100)
#   Define main as the main function of the program      

def main():
    low = 1     #    Assigns the value 1 to the low variable     
    high = 100  #    Assigns the value 100 to the high variable    
    again = 'y' #    Assigns the value 'y' to the again variable
    counter = 1 #    Assigns the value 1 to the counter variable
    win = False #    Assigns the value False to the win variable
    
    print('Guess the Mystery Number ... ') #    Call the print function to display 'Guess the Mystery Number ... '

    while again == 'y':     #    Creates a condition controlled while loop. While again == 'y', the following happens:

          #    Creates the random number generated for each looped playthrough 
                                         #    of the game and assigns the value to the variable number               
                     
        while win==False and counter <= MAX: #    Creates a count controlled and condition controlled
                                             #    while loop. While either win == False or the counter variable is
                                             #    not <= the global constant MAX, the While loop will itterate  
        
            print('\nRound', counter ,'of',MAX)    #    Calls the print function and displays the current round of the game as the counter
                                                   #    variable and uses the MAX global constant for maximum number of rounds         

            print('-----------------------------') #    Calls the print function to display - to seperate rounds and the guess input
            
            guess = getGuess(low, high)            #    Calls the getGuess funtion and passes the arguments low and high into
                                                   #    the parameters first and last. Returns the validated value into the guess variable

            win=guessWin(number, guess)            #    Calls the guessWin function and passes the arguments number and guess into the
                                                   #    parameters number and guess. Returns the True or False value into the win variable 

            counter +=1                            #    Updates the counter variable with the augmented assignment operator +=
                                                   #    by an increment of 1 
                                           
        else:                                      #    Else statement to close the While loop
            
            print('\nGame Over')                   #    Calls the print function and diplays game over if the counter variable = the MAX
                                                   #    global constant

            again = input('\nWould you like to try again (y/n)?') #    Prompts user to input either 'y' or 'n' and
                                                                  #    assigns the input value to the again variable
                                                                  #    thereby either starting the loop again or ending the game

            if again == 'y':                       #    Creates an if statement. If the the again variable == the 'y' value,
                win=False                          #    the False value is assigned to the Win variable and the loop resets

            counter = 1                            #    The counter variable is updated to 1 

    else:                                          #    Else statement to close the While loop 

        print ('\nThanks for playing!')              #    Calls the print function and displays 'Thanks for playing!' 

#   Define the function getGuess with parameters first and last. Will validate the users input                              
    
def getGuess(first, last):                  

    guess = int(input('Enter your guess (1-100): ')) #    Calls the int and input functions and prompts the user to assign the guess variable
    
    while guess < 1 or guess > 100:                  #    Creates a condition controlled while loop that validates if the guess
                                                     #    variable is < 1 or > 100

        print('Error ... Incorrect number. try again') #    Calls the print function to display an error message if the guess variable
                                                       #    does not fit the conditions created in the while loop

        guess = int(input('Enter your guess (1-100): ')) #    Calls the int and input functions and prompts
                                                         #    the user to assign the guess variable
        
    return guess                                     #    Returns the value input by the user to the guess variable

#   Define the function guessWin with the parameters number and guess and if the guess is <, >, or = to the value created
#   by the random number generator

def guessWin(number, guess):

    if guess < number:                            #    Creates the start of an if, elif statement, if the guess variable is < the
                                                  #    number variable, does the following:       

        print(' ---> ',guess ,'is too Low ...')   #    Calls the print function and displays the guess variable is < the number variable       

        return False                              #    Returns the value False and updates the win variable

    elif guess > number:                          #    Continues the if, elif statement, elif the guess variable is > the number variable,
                                                  #    does the following:       

        print(' ---> ',guess ,'is too High ...')  #    Calls the print function and displays the guess variable is > the number variable       

        return False                              #    Returns the value False and updates the win variable

    elif guess == number:                         #    Continues the if, elif statement, elif the guess variable is == the number variable,
                                                  #    does the following:       

        print('\nCongratulations ... You guessed the Mystery Number!') #    Calls the print function and displays congratulations for
                                                                       #    guessing the mystery number

        return True                                                    #    Returns the value True and updates the win variable

#   Calls the main function

main()
